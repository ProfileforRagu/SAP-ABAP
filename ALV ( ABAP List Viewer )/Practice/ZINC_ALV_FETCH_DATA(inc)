*&---------------------------------------------------------------------*
*& Include          ZINC_ALV_FETCH_DATA
*&---------------------------------------------------------------------*
FORM sele_scr_output.

  IF p_vbeln = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'A'.
        screen-input = 1.
        screen-active = 1.
        MODIFY SCREEN.
        CLEAR screen.
      ELSEIF screen-group1 = 'B'.
        screen-input = 0.
        screen-active = 0.
        MODIFY SCREEN.
        CLEAR screen.
      ENDIF.
    ENDLOOP.

  ELSEIF p_ebeln = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'B'.
        screen-input = 1.
        screen-active = 1.
        MODIFY SCREEN.
        CLEAR screen.
      ELSEIF screen-group1 = 'A'.
        screen-input = 0.
        screen-active = 0.
        MODIFY SCREEN.
        CLEAR screen.
      ENDIF.
    ENDLOOP.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form verify_data
*&---------------------------------------------------------------------*
*&  Here in verifying 'VBAK/EKPO' table datas...
*&---------------------------------------------------------------------*
FORM verify_data .

  IF p_vbeln = 'X'. "----> Verify VBAK table
    SELECT SINGLE vbeln FROM vbak INTO iv_vbeln WHERE vbeln IN s_vbeln.
    IF sy-subrc NE 0.
      MESSAGE 'Please enter valid data(s)' TYPE 'I' DISPLAY LIKE 'E'.
    ENDIF.
  ELSEIF p_ebeln = 'X'. " ----> Verify EKPO table
    SELECT SINGLE ebeln FROM ekpo INTO iv_ebeln WHERE ebeln IN s_ebeln.
    IF sy-subrc NE 0.
      MESSAGE 'Please enter valid data(s)' TYPE 'I' DISPLAY LIKE 'E'.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_headers
*&---------------------------------------------------------------------*
*&  Here i call headings on VBAP & EKPO table
*&---------------------------------------------------------------------*

FORM get_headers .

  IF p_vbeln = 'X'.
    PERFORM vbak_headings.
  ELSEIF p_ebeln = 'X'.
    PERFORM ekpo_headings.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form VBAK_headings
*&---------------------------------------------------------------------*
*& I give headings ot VBAP table
*&---------------------------------------------------------------------*

FORM vbak_headings .

  wa_fcat_vbak-fieldname = 'VBELN'.
  wa_fcat_vbak-col_pos = '1'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'VBELN'.
  wa_fcat_vbak-hotspot = 1.
  wa_fcat_vbak-emphasize = 'C500'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

  wa_fcat_vbak-fieldname = 'AUDAT'.
  wa_fcat_vbak-col_pos = '2'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'AUDAT'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

  wa_fcat_vbak-fieldname = 'VBTYP'.
  wa_fcat_vbak-col_pos = '3'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'VBTYP'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

  wa_fcat_vbak-fieldname = 'NETWR'.
  wa_fcat_vbak-col_pos = '4'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'NETWR'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

  wa_fcat_vbak-fieldname = 'KUNNR'.
  wa_fcat_vbak-col_pos = '5'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'KUNNR'.
  wa_fcat_vbak-hotspot = 1.
  wa_fcat_vbak-emphasize = 'C600'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

  wa_fcat_vbak-fieldname = 'WAERK'.
  wa_fcat_vbak-col_pos = '6'.
  wa_fcat_vbak-ref_tabname = 'VBAK'.
  wa_fcat_vbak-ref_fieldname = 'WAERK'.
  APPEND wa_fcat_vbak TO it_fcat_vbak.
  CLEAR wa_fcat_vbak.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ekpo_headings
*&---------------------------------------------------------------------*
*& I give headings to EKPO table.
*&---------------------------------------------------------------------*

FORM ekpo_headings .

  wa_fcat_ekpo-fieldname = 'EBELN'.
  wa_fcat_ekpo-col_pos = '1'.
  wa_fcat_ekpo-ref_tabname = 'EKPO'.
  wa_fcat_ekpo-ref_fieldname = 'EBELN'.
  wa_fcat_ekpo-hotspot = 1.
  wa_fcat_ekpo-emphasize = 'C500'.
  APPEND wa_fcat_ekpo TO it_fcat_ekpo.
  CLEAR wa_fcat_ekpo.

  wa_fcat_ekpo-fieldname = 'EBELP'.
  wa_fcat_ekpo-col_pos = '2'.
  wa_fcat_ekpo-ref_tabname = 'EKPO'.
  wa_fcat_ekpo-ref_fieldname = 'EBELP'.
  APPEND wa_fcat_ekpo TO it_fcat_ekpo.
  CLEAR wa_fcat_ekpo.

  wa_fcat_ekpo-fieldname = 'MATNR'.
  wa_fcat_ekpo-col_pos = '3'.
  wa_fcat_ekpo-ref_tabname = 'EKPO'.
  wa_fcat_ekpo-ref_fieldname = 'MATNR'.
  wa_fcat_ekpo-hotspot = 1.
  wa_fcat_ekpo-emphasize = 'C100'.
  APPEND wa_fcat_ekpo TO it_fcat_ekpo.
  CLEAR wa_fcat_ekpo.

  wa_fcat_ekpo-fieldname = 'BUKRS'.
  wa_fcat_ekpo-col_pos = '4'.
  wa_fcat_ekpo-ref_tabname = 'EKPO'.
  wa_fcat_ekpo-ref_fieldname = 'BUKRS'.
  APPEND wa_fcat_ekpo TO it_fcat_ekpo.
  CLEAR wa_fcat_ekpo.

  wa_fcat_ekpo-fieldname = 'WERKS'.
  wa_fcat_ekpo-col_pos = '5'.
  wa_fcat_ekpo-ref_tabname = 'EKPO'.
  wa_fcat_ekpo-ref_fieldname = 'WERKS'.
  APPEND wa_fcat_ekpo TO it_fcat_ekpo.
  CLEAR wa_fcat_ekpo.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_tab_data
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*

FORM get_tab_data .
  IF p_vbeln = 'X'.
    PERFORM vbak_tab_fill.
  ELSEIF p_ebeln = 'X'.
    PERFORM ekpo_tab_fill.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form vbak_tab_fill
*&---------------------------------------------------------------------*
*& Here i get datas from VBAK table.
*&---------------------------------------------------------------------*

FORM vbak_tab_fill .

  SELECT vbeln
         audat
         vbtyp
         netwr
         kunnr
         waerk FROM vbak
    INTO TABLE it_vbak WHERE vbeln IN s_vbeln.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form ekpo_tab_fill
*&---------------------------------------------------------------------*
*& Here i get datas from EKPO table.
*&---------------------------------------------------------------------*

FORM ekpo_tab_fill .

  SELECT ebeln
         ebelp
         matnr
         bukrs
         werks FROM ekpo
    INTO TABLE it_ekpo WHERE ebeln IN s_ebeln.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form get_events
*&---------------------------------------------------------------------*
*& Here i call events
*&---------------------------------------------------------------------*

FORM get_events .

  IF p_vbeln = 'X'.                                " ----> VBAK events
    wa_events_vbak-name = 'TOP_OF_PAGE'.
    wa_events_vbak-form = 'VBAK_HEAD_LINE'.
    APPEND wa_events_vbak TO it_events_vbak.
    CLEAR wa_events_vbak.

    wa_events_vbak-name = 'USER_COMMAND'.
    wa_events_vbak-form = 'VBELN_KUNNR_SEL_OPT'.
    APPEND wa_events_vbak TO it_events_vbak.
    CLEAR wa_events_vbak.
  ELSEIF p_ebeln = 'X'.                          " ----> EKPO events
    wa_events_ekpo-name = 'TOP_OF_PAGE'.
    wa_events_ekpo-form = 'EKPO_HEAD_LINE'.
    APPEND wa_events_ekpo TO it_events_ekpo.
    CLEAR wa_events_ekpo.

    wa_events_ekpo-name = 'USER_COMMAND'.
    wa_events_ekpo-form = 'EBELN_SEL_OPT'.
    APPEND wa_events_ekpo TO it_events_ekpo.
    CLEAR wa_events_ekpo.
  ENDIF.

ENDFORM.
FORM vbak_head_line.

  wa_header_vbak-typ = 'H'.                      " ----> VBAK head line function & declaration
  wa_header_vbak-info = 'This is VBAK table'.
  APPEND wa_header_vbak TO it_header_vbak.
  CLEAR wa_header_vbak.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_header_vbak.
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =
  CLEAR : wa_header_vbak, it_header_vbak.

ENDFORM.
FORM ekpo_head_line.

  wa_header_ekpo-typ = 'H'.                     " ----> EKPO head line function & declaration
  wa_header_ekpo-info = 'This is EKPO table'.
  APPEND wa_header_ekpo TO it_header_ekpo.
  CLEAR wa_header_ekpo.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_header_ekpo.
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =
  CLEAR: wa_header_ekpo, it_header_ekpo.
ENDFORM.
*&---------------------------------------------------------------------*
*& Form display_datas
*&---------------------------------------------------------------------*
*& Here i'm declating display functions.
*&---------------------------------------------------------------------*

FORM display_datas .

  IF p_vbeln = 'X'.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
*       I_INTERFACE_CHECK  = ' '
*       I_BYPASSING_BUFFER = ' '
*       I_BUFFER_ACTIVE    = ' '
        i_callback_program = sy-cprog
*       I_CALLBACK_PF_STATUS_SET          = ' '
*       I_CALLBACK_USER_COMMAND           = ' '
*       I_CALLBACK_TOP_OF_PAGE            = ' '
*       I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*       I_CALLBACK_HTML_END_OF_LIST       = ' '
*       I_STRUCTURE_NAME   =
*       I_BACKGROUND_ID    = ' '
*       I_GRID_TITLE       =
*       I_GRID_SETTINGS    =
*       IS_LAYOUT          =
        it_fieldcat        = it_fcat_vbak
*       IT_EXCLUDING       =
*       IT_SPECIAL_GROUPS  =
*       IT_SORT            =
*       IT_FILTER          =
*       IS_SEL_HIDE        =
*       I_DEFAULT          = 'X'
*       I_SAVE             = ' '
*       IS_VARIANT         =
        it_events          = it_events_vbak
*       IT_EVENT_EXIT      =
*       IS_PRINT           =
*       IS_REPREP_ID       =
*       I_SCREEN_START_COLUMN             = 0
*       I_SCREEN_START_LINE               = 0
*       I_SCREEN_END_COLUMN               = 0
*       I_SCREEN_END_LINE  = 0
*       I_HTML_HEIGHT_TOP  = 0
*       I_HTML_HEIGHT_END  = 0
*       IT_ALV_GRAPHICS    =
*       IT_HYPERLINK       =
*       IT_ADD_FIELDCAT    =
*       IT_EXCEPT_QINFO    =
*       IR_SALV_FULLSCREEN_ADAPTER        =
*       O_PREVIOUS_SRAL_HANDLER           =
*       O_COMMON_HUB       =
*      IMPORTING
*       E_EXIT_CAUSED_BY_CALLER           =
*       ES_EXIT_CAUSED_BY_USER            =
      TABLES
        t_outtab           = it_vbak
      EXCEPTIONS
        program_error      = 1
        OTHERS             = 2.

    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.

  ELSEIF p_ebeln = 'X'.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
*       I_INTERFACE_CHECK  = ' '
*       I_BYPASSING_BUFFER = ' '
*       I_BUFFER_ACTIVE    = ' '
        i_callback_program = sy-cprog
*       I_CALLBACK_PF_STATUS_SET          = ' '
*       I_CALLBACK_USER_COMMAND           = ' '
*       I_CALLBACK_TOP_OF_PAGE            = ' '
*       I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*       I_CALLBACK_HTML_END_OF_LIST       = ' '
*       I_STRUCTURE_NAME   =
*       I_BACKGROUND_ID    = ' '
*       I_GRID_TITLE       =
*       I_GRID_SETTINGS    =
*       IS_LAYOUT          =
        it_fieldcat        = it_fcat_ekpo
*       IT_EXCLUDING       =
*       IT_SPECIAL_GROUPS  =
*       IT_SORT            =
*       IT_FILTER          =
*       IS_SEL_HIDE        =
*       I_DEFAULT          = 'X'
*       I_SAVE             = ' '
*       IS_VARIANT         =
        it_events          = it_events_ekpo
*       IT_EVENT_EXIT      =
*       IS_PRINT           =
*       IS_REPREP_ID       =
*       I_SCREEN_START_COLUMN             = 0
*       I_SCREEN_START_LINE               = 0
*       I_SCREEN_END_COLUMN               = 0
*       I_SCREEN_END_LINE  = 0
*       I_HTML_HEIGHT_TOP  = 0
*       I_HTML_HEIGHT_END  = 0
*       IT_ALV_GRAPHICS    =
*       IT_HYPERLINK       =
*       IT_ADD_FIELDCAT    =
*       IT_EXCEPT_QINFO    =
*       IR_SALV_FULLSCREEN_ADAPTER        =
*       O_PREVIOUS_SRAL_HANDLER           =
*       O_COMMON_HUB       =
*     IMPORTING
*       E_EXIT_CAUSED_BY_CALLER           =
*       ES_EXIT_CAUSED_BY_USER            =
      TABLES
        t_outtab           = it_ekpo
      EXCEPTIONS
        program_error      = 1
        OTHERS             = 2.

    IF sy-subrc <> 0.
* Implement suitable error handling here
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form VBELN_KUNNR_SEL_OPT
*&---------------------------------------------------------------------*
*& Here i declear call another table / screen 1
*&---------------------------------------------------------------------*

FORM vbeln_kunnr_sel_opt USING uc_vbak wa_uc_vbak TYPE slis_selfield.

  IF wa_uc_vbak-fieldname = 'VBELN'.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_uc_vbak-value
      IMPORTING
        output = iv_vbeln_p.

    SELECT vbeln posnr matnr kwmeng netwr werks FROM vbap INTO TABLE it_vbap WHERE vbeln = iv_vbeln_p.

    PERFORM vbap_headings.
    PERFORM vbap_events.
    PERFORM vbap_display.

  ELSEIF wa_uc_vbak-fieldname = 'KUNNR'.

    SET PARAMETER ID 'KUN' FIELD wa_uc_vbak-value.
    CALL TRANSACTION 'XD03' AND SKIP FIRST SCREEN.

  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form EBELN_SEL_OPT
*&---------------------------------------------------------------------*
*& Here i declear call another table / screen 1
*&---------------------------------------------------------------------*

FORM ebeln_sel_opt USING uc_ekpo wa_uc_ekpo TYPE slis_selfield.

  IF wa_uc_ekpo-fieldname = 'EBELN'.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_uc_ekpo-value
      IMPORTING
        output = iv_ebeln.

    SELECT ebeln bukrs statu pincr kunnr FROM ekko INTO TABLE it_ekko WHERE ebeln = iv_ebeln.

    PERFORM ekko_headings.
    PERFORM ekko_events.
    PERFORM ekko_display.

  ELSEIF wa_uc_ekpo-fieldname = 'MATNR'.

    SET PARAMETER ID 'MAT' FIELD wa_uc_ekpo-value.
    CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.

  ENDIF.

ENDFORM.
FORM vbap_headings.

  wa_fcat_vbap-fieldname = 'VBELN'.
  wa_fcat_vbap-col_pos = '1'.
  wa_fcat_vbap-ref_tabname = 'VBAP'.
  wa_fcat_vbap-ref_fieldname = 'VBELN'.
  wa_fcat_vbap-hotspot = 1.
  wa_fcat_vbap-emphasize = 'C100'.
  APPEND wa_fcat_vbap TO it_fcat_vbap.
  CLEAR wa_fcat_vbap.

  wa_fcat_vbap-fieldname = 'POSNR'.
  wa_fcat_vbap-col_pos = '2'.
  wa_fcat_vbap-ref_tabname = 'VBAP'.
  wa_fcat_vbap-ref_fieldname = 'POSNR'.
  APPEND wa_fcat_vbap TO it_fcat_vbap.
  CLEAR wa_fcat_vbap.

  wa_fcat_vbap-fieldname = 'MATNR'.
  wa_fcat_vbap-col_pos = '3'.
  wa_fcat_vbap-ref_tabname = 'VBAP'.
  wa_fcat_vbap-ref_fieldname = 'MATNR'.
  wa_fcat_vbap-hotspot = 1.
  wa_fcat_vbap-emphasize = 'C200'.
  APPEND wa_fcat_vbap TO it_fcat_vbap.
  CLEAR wa_fcat_vbap.

  wa_fcat_vbap-fieldname = 'KWMENG'.
  wa_fcat_vbap-col_pos = '4'.
  wa_fcat_vbap-ref_tabname = 'VBAP'.
  wa_fcat_vbap-ref_fieldname = 'KWMENG'.
  APPEND wa_fcat_vbap TO it_fcat_vbap.
  CLEAR wa_fcat_vbap.

  wa_fcat_vbap-fieldname = 'NETWR'.
  wa_fcat_vbap-col_pos = '5'.
  wa_fcat_vbap-ref_tabname = 'VBAP'.
  wa_fcat_vbap-ref_fieldname = 'NETWR'.
  APPEND wa_fcat_vbap TO it_fcat_vbap.
  CLEAR wa_fcat_vbap.

ENDFORM.
FORM vbap_events.

  wa_events_vbap-name = 'TOP_OF_PAGE'.
  wa_events_vbap-form = 'VBAP_HEADER_TOP'.
  APPEND wa_events_vbap TO it_events_vbap.
  CLEAR wa_events_vbap.

  wa_events_vbap-name = 'USER_COMMAND'.
  wa_events_vbap-form = 'VBELN_MATNR_SEL_OPT'.
  APPEND wa_events_vbap TO it_events_vbap.
  CLEAR wa_events_vbap.

ENDFORM.
FORM vbeln_matnr_sel_opt USING uc_vbap wa_uc_vbap TYPE slis_selfield.

  IF wa_uc_vbap-fieldname = 'VBELN'.
    SET PARAMETER ID 'AUN' FIELD wa_uc_vbap-value.
    CALL TRANSACTION 'VA03' AND SKIP FIRST SCREEN.
  ELSEIF wa_uc_vbap-fieldname = 'MATNR'. "-----------------------------> BENDING
*    PERFORM MAKT_HEADING.
*    PERFORM MAKT_EVENTS.
*    PERFORM MAKT_DISPLAY.
  ENDIF.

ENDFORM.
FORM vbap_display.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER = ' '
*     I_BUFFER_ACTIVE    = ' '
      i_callback_program = sy-cprog
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
*     IS_LAYOUT          =
      it_fieldcat        = it_fcat_vbap
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS  =
*     IT_SORT            =
*     IT_FILTER          =
*     IS_SEL_HIDE        =
*     I_DEFAULT          = 'X'
*     I_SAVE             = ' '
*     IS_VARIANT         =
      it_events          = it_events_vbap
*     IT_EVENT_EXIT      =
*     IS_PRINT           =
*     IS_REPREP_ID       =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  = 0
*     I_HTML_HEIGHT_END  = 0
*     IT_ALV_GRAPHICS    =
*     IT_HYPERLINK       =
*     IT_ADD_FIELDCAT    =
*     IT_EXCEPT_QINFO    =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER           =
*     O_COMMON_HUB       =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab           = it_vbap
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.

  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.
ENDFORM.
FORM vbap_header_top.

  wa_header_vbap-typ = 'H'.
  wa_header_vbap-info = ' This  is vbap table'.
  APPEND wa_header_vbap TO it_header_vbap.
  CLEAR : wa_header_vbap.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_header_vbap.
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =

  CLEAR : wa_header_vbap,it_header_vbap.

ENDFORM.
FORM ekko_headings .

  wa_fcat_ekko-fieldname = 'EBELN'.
  wa_fcat_ekko-col_pos = '1'.
  wa_fcat_ekko-ref_tabname = 'EKKO'.
  wa_fcat_ekko-ref_fieldname = 'EBELN'.
  wa_fcat_ekko-hotspot = 1.
  wa_fcat_ekko-emphasize = 'C200'.
  APPEND wa_fcat_ekko TO it_fcat_ekko.
  CLEAR wa_fcat_ekko.

  wa_fcat_ekko-fieldname = 'BUKRS'.
  wa_fcat_ekko-col_pos = '2'.
  wa_fcat_ekko-ref_tabname = 'EKKO'.
  wa_fcat_ekko-ref_fieldname = 'BUKRS'.
  wa_fcat_ekko-hotspot = 1.
  wa_fcat_ekko-emphasize = 'C300'.
  APPEND wa_fcat_ekko TO it_fcat_ekko.
  CLEAR wa_fcat_ekko.

  wa_fcat_ekko-fieldname = 'STATU'.
  wa_fcat_ekko-col_pos = '3'.
  wa_fcat_ekko-ref_tabname = 'EKKO'.
  wa_fcat_ekko-ref_fieldname = 'STATU'.
  APPEND wa_fcat_ekko TO it_fcat_ekko.
  CLEAR wa_fcat_ekko.

  wa_fcat_ekko-fieldname = 'PINCR'.
  wa_fcat_ekko-col_pos = '4'.
  wa_fcat_ekko-ref_tabname = 'EKKO'.
  wa_fcat_ekko-ref_fieldname = 'PINCR'.
  APPEND wa_fcat_ekko TO it_fcat_ekko.
  CLEAR wa_fcat_ekko.

  wa_fcat_ekko-fieldname = 'KUNNR'.
  wa_fcat_ekko-col_pos = '5'.
  wa_fcat_ekko-ref_tabname = 'EKKO'.
  wa_fcat_ekko-ref_fieldname = 'KUNNR'.
  APPEND wa_fcat_ekko TO it_fcat_ekko.
  CLEAR wa_fcat_ekko.

ENDFORM.
FORM ekko_events .

  wa_events_ekko-name = 'TOP_OF_PAGE'.
  wa_events_ekko-form = 'EKKO_HEADING_TOP'.
  APPEND wa_events_ekko TO it_events_ekko.
  CLEAR wa_events_ekko.

  wa_events_ekko-name = 'USER_COMMAND'.
  wa_events_ekko-form = 'BUKRS_SEL_OPT'.
  APPEND wa_events_ekko TO it_events_ekko.
  CLEAR wa_events_ekko.

ENDFORM.
FORM ekko_display .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK  = ' '
*     I_BYPASSING_BUFFER = ' '
*     I_BUFFER_ACTIVE    = ' '
      i_callback_program = sy-cprog
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME   =
*     I_BACKGROUND_ID    = ' '
*     I_GRID_TITLE       =
*     I_GRID_SETTINGS    =
*     IS_LAYOUT          =
      it_fieldcat        = it_fcat_ekko
*     IT_EXCLUDING       =
*     IT_SPECIAL_GROUPS  =
*     IT_SORT            =
*     IT_FILTER          =
*     IS_SEL_HIDE        =
*     I_DEFAULT          = 'X'
*     I_SAVE             = ' '
*     IS_VARIANT         =
      it_events          = it_events_ekko
*     IT_EVENT_EXIT      =
*     IS_PRINT           =
*     IS_REPREP_ID       =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE  = 0
*     I_HTML_HEIGHT_TOP  = 0
*     I_HTML_HEIGHT_END  = 0
*     IT_ALV_GRAPHICS    =
*     IT_HYPERLINK       =
*     IT_ADD_FIELDCAT    =
*     IT_EXCEPT_QINFO    =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*     O_PREVIOUS_SRAL_HANDLER           =
*     O_COMMON_HUB       =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab           = it_ekko
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.

  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.


ENDFORM.
FORM EKKO_HEADING_TOP.

    wa_header_ekko-typ = 'H'.
  wa_header_ekko-info = ' This  is EKKO table'.
  APPEND wa_header_ekko TO it_header_ekko.
  CLEAR : wa_header_ekko.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_header_ekko.
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =

  CLEAR : wa_header_ekko,it_header_ekko.

ENDFORM.
